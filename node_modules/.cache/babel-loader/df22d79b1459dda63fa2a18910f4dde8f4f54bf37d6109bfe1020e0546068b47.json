{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, withModifiers as _withModifiers } from \"vue\";\nconst _hoisted_1 = {\n  class: \"container-fluid border p-4\"\n};\nconst _hoisted_2 = {\n  class: \"form-in-line\"\n};\nconst _hoisted_3 = {\n  class: \"col-10 col-m-6 col-lg-6 mx-auto\"\n};\nconst _hoisted_4 = {\n  class: \"input-group-text mb-3\"\n};\nconst _hoisted_5 = {\n  class: \"input-group-text mb-3\"\n};\nconst _hoisted_6 = {\n  class: \"input-group-text mb-3\"\n};\nconst _hoisted_7 = [\"value\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_cache[15] || (_cache[15] = _createElementVNode(\"div\", {\n    class: \"row\"\n  }, [_createElementVNode(\"h5\", {\n    class: \"text-center front-weight-bold\"\n  }, \"TRABAJA CON NOSOTROS\")], -1 /* HOISTED */)), _cache[16] || (_cache[16] = _createElementVNode(\"br\", null, null, -1 /* HOISTED */)), _createElementVNode(\"div\", _hoisted_1, [_createElementVNode(\"form\", _hoisted_2, [_createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_cache[8] || (_cache[8] = _createElementVNode(\"span\", {\n    class: \"input-group-text custom-span me-2\"\n  }, \"Apellidos:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control sm w-50\",\n    required: \"\",\n    placeholder: \"Apellidos\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.candidato.apellidos = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.candidato.apellidos]]), _cache[9] || (_cache[9] = _createElementVNode(\"span\", {\n    class: \"input-group-text custom-span ms-2 me-2\"\n  }, \"Nombre:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    class: \"form-control sm w-50\",\n    required: \"\",\n    placeholder: \"Nombre\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.candidato.nombre = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.candidato.nombre]])]), _createElementVNode(\"div\", _hoisted_5, [_cache[10] || (_cache[10] = _createElementVNode(\"span\", {\n    class: \"input-group-text custom-span ms-2 me-2\"\n  }, \"Email: \", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    class: \"form-control sm w-75\",\n    required: \"\",\n    placeholder: \"Email\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.candidato.email = $event),\n    onBlur: _cache[3] || (_cache[3] = $event => $options.validarEmail(this.candidato.email))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.candidato.email]]), _cache[11] || (_cache[11] = _createElementVNode(\"span\", {\n    class: \"input-group-text custom-span ms-2 me-2\"\n  }, \"Móvil:\", -1 /* HOISTED */)), _withDirectives(_createElementVNode(\"input\", {\n    class: \"form-control sm w-25\",\n    type: \"text\",\n    required: \"\",\n    placeholder: \"Móvil\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.candidato.movil = $event),\n    onBlur: _cache[5] || (_cache[5] = $event => $options.validarTelefono(this.candidato.movil))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelText, $data.candidato.movil]])]), _createElementVNode(\"div\", _hoisted_6, [_withDirectives(_createElementVNode(\"select\", {\n    name: \"categoria\",\n    class: \"form-control sm w-25\",\n    \"onUpdate:modelValue\": _cache[6] || (_cache[6] = $event => $data.candidato.cat = $event)\n  }, [_cache[12] || (_cache[12] = _createElementVNode(\"option\", {\n    value: \"\"\n  }, \"Provincia\", -1 /* HOISTED */)), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.provincias, provincia => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: provincia.id,\n      value: provincia\n    }, _toDisplayString(provincia.nm), 9 /* TEXT, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.candidato.cat]]), _cache[13] || (_cache[13] = _createElementVNode(\"span\", {\n    class: \"input-group-text custom-span ms-2 me-2\"\n  }, \"CV (PDF); \", -1 /* HOISTED */)), _cache[14] || (_cache[14] = _createElementVNode(\"input\", {\n    type: \"file\",\n    class: \"form-control sm w-100\"\n  }, null, -1 /* HOISTED */))])]), _createElementVNode(\"button\", {\n    class: \"btn btn-primary m-1\",\n    onClick: _cache[7] || (_cache[7] = _withModifiers((...args) => $options.grabarCandidato && $options.grabarCandidato(...args), [\"prevent\"]))\n  }, \"Enviar\")])])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["class","_createElementBlock","_Fragment","_createElementVNode","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","type","required","placeholder","_cache","$event","$data","candidato","apellidos","nombre","_hoisted_5","email","onBlur","$options","validarEmail","movil","validarTelefono","_hoisted_6","name","cat","value","_renderList","_ctx","provincias","provincia","key","id","nm","_hoisted_7","onClick","_withModifiers","args","grabarCandidato"],"sources":["/home/a23johanfav/apontejohan/src/components/TablaEmpleo.vue"],"sourcesContent":["<template>\n    <div class=\"row\">\n      <h5 class=\"text-center front-weight-bold\">TRABAJA CON NOSOTROS</h5>\n    </div>\n    <br>\n    <div class=\"container-fluid border p-4\">\n      <form class=\"form-in-line\">\n        <div class=\"col-10 col-m-6 col-lg-6 mx-auto\">\n          <div class=\"input-group-text mb-3\">\n            <span class=\"input-group-text custom-span me-2\">Apellidos:</span>\n            <input type=\"text\" class=\"form-control sm w-50\" required placeholder=\"Apellidos\" v-model=\"candidato.apellidos\">\n  \n            <span class=\"input-group-text custom-span ms-2 me-2\">Nombre:</span>\n            <input type=\"text\" class=\"form-control sm w-50\" required placeholder=\"Nombre\" v-model=\"candidato.nombre\">\n          </div>\n          <div class=\"input-group-text mb-3\">\n            <span class=\"input-group-text custom-span ms-2 me-2\">Email: </span>\n            <input type=\"email\" class=\"form-control sm w-75\" required placeholder=\"Email\" v-model=\"candidato.email\" @blur=\"validarEmail(this.candidato.email)\">\n  \n            <span class=\"input-group-text custom-span ms-2 me-2\">Móvil:</span>\n            <input class=\"form-control sm w-25\" type=\"text\" required placeholder=\"Móvil\" v-model=\"candidato.movil\" @blur=\"validarTelefono(this.candidato.movil)\">\n          </div>\n          <div class=\"input-group-text mb-3\">\n            <select name=\"categoria\" class=\"form-control sm w-25\" v-model=\"candidato.cat\">\n            <option value=\"\">Provincia</option>\n            <option v-for=\"provincia in provincias\" :key=\"provincia.id\" :value=\"provincia\">\n              {{ provincia.nm }}\n            </option>\n          </select>\n            <span class=\"input-group-text custom-span ms-2 me-2\">CV (PDF); </span>\n            <input type=\"file\" class=\"form-control sm w-100\">\n          </div>\n        </div>\n        <button class=\"btn btn-primary m-1\" @click.prevent=\"grabarCandidato\">Enviar</button>\n      </form>\n    </div>\n  </template>\n  \n  <script>\n  import Swal from 'sweetalert2';\n  \n  export default {\n      name: \"TablaEmpleo\",\n      components: {\n    },\n  \n    data(){\n      return{\n          candidato: {\n              apellidos: '',\n              nombre: '',\n              email: '',\n              movil: ''\n          },\n  \n          candidatos: [],\n      }\n    },\n  \n    methods: {\n      validarTelefono(telefono) {\n        if (telefono == '') {\n          this.mostrarAlerta('Error', 'El teléfono con formato no valido', 'error');\n        }\n        const regex = /^[67]\\d{8}$/;\n        if (!regex.test(telefono)) {\n          this.mostrarAlerta('Error', 'El teléfono con formato no valido', 'error')\n        }\n      },\n  \n      validarEmail(email) {\n        if (email== '') {\n          this.mostrarAlerta('Error', 'El email con formato no valido', 'error');\n        }\n        const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n        if (!regex.test(email)) {\n          this.mostrarAlerta('Error', 'El email con formato no valido', 'error')\n        }\n      },\n  \n      mostrarAlerta(titulo, mensaje, icono) {\n        Swal.fire({\n          title: titulo,\n          text: mensaje,\n          icon: icono,\n          customClass: {\n            container: 'custom-alert-container',\n            popup: 'custom-alert-popup',\n            modal: 'custom-alert-modal'\n          }\n        })\n      },\n  \n  \n      async grabarCandidato() {\n        // Verificar si los campos requeridos están llenos\n        if (this.candidato.apellidos && this.candidato.nombre && this.candidato.email && this.candidato.movil && this.candidato.apellidos && this.candidato.nombre) {\n          try {\n            const response = await fetch('http://localhost:3000/candidatos');\n            if (!response.ok) {\n              throw new Error('Error al obtener los candidatos: ' + response.statusText);\n            }\n  \n            const crearResponse = await fetch('http://localhost:3000/candidatos', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify(this.candidato),\n            });\n  \n            if (!crearResponse.ok) {\n              throw new Error('Error al guardar el candidato ' + crearResponse.statusText);\n            }\n  \n            const nuevoCandidato = await crearResponse.json();\n            this.candidatos.push(nuevoCandidato);\n            this.mostrarAlerta('Aviso', 'Candidato grabado correctamente', 'success');\n          } catch (error) {\n            console.error(error);\n            this.mostrarAlerta('Error', 'No se pudo grabar el cliente.', 'error');\n          }\n        } else {\n          this.mostrarAlerta('Error', 'Por favor, completa todos los campos requeridos.', 'error');\n        }\n      },\n    }\n  }\n  </script>\n  \n  <style>\n  \n  </style>"],"mappings":";;EAKSA,KAAK,EAAC;AAA4B;;EAC/BA,KAAK,EAAC;AAAc;;EACnBA,KAAK,EAAC;AAAiC;;EACrCA,KAAK,EAAC;AAAuB;;EAO7BA,KAAK,EAAC;AAAuB;;EAO7BA,KAAK,EAAC;AAAuB;mBAtB5C;;uBAAAC,mBAAA,CAAAC,SAAA,S,4BACIC,mBAAA,CAEM;IAFDH,KAAK,EAAC;EAAK,IACdG,mBAAA,CAAmE;IAA/DH,KAAK,EAAC;EAA+B,GAAC,sBAAoB,E,kDAEhEG,mBAAA,CAAI,sCACJA,mBAAA,CA8BM,OA9BNC,UA8BM,GA7BJD,mBAAA,CA4BO,QA5BPE,UA4BO,GA3BLF,mBAAA,CAyBM,OAzBNG,UAyBM,GAxBJH,mBAAA,CAMM,OANNI,UAMM,G,0BALJJ,mBAAA,CAAiE;IAA3DH,KAAK,EAAC;EAAmC,GAAC,YAAU,sB,gBAC1DG,mBAAA,CAA+G;IAAxGK,IAAI,EAAC,MAAM;IAACR,KAAK,EAAC,sBAAsB;IAACS,QAAQ,EAAR,EAAQ;IAACC,WAAW,EAAC,WAAW;IAV5F,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAUsGC,KAAA,CAAAC,SAAS,CAACC,SAAS,GAAAH,MAAA;iDAAnBC,KAAA,CAAAC,SAAS,CAACC,SAAS,E,6BAE7GZ,mBAAA,CAAmE;IAA7DH,KAAK,EAAC;EAAwC,GAAC,SAAO,sB,gBAC5DG,mBAAA,CAAyG;IAAlGK,IAAI,EAAC,MAAM;IAACR,KAAK,EAAC,sBAAsB;IAACS,QAAQ,EAAR,EAAQ;IAACC,WAAW,EAAC,QAAQ;IAbzF,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAamGC,KAAA,CAAAC,SAAS,CAACE,MAAM,GAAAJ,MAAA;iDAAhBC,KAAA,CAAAC,SAAS,CAACE,MAAM,E,KAEzGb,mBAAA,CAMM,OANNc,UAMM,G,4BALJd,mBAAA,CAAmE;IAA7DH,KAAK,EAAC;EAAwC,GAAC,SAAO,sB,gBAC5DG,mBAAA,CAAmJ;IAA5IK,IAAI,EAAC,OAAO;IAACR,KAAK,EAAC,sBAAsB;IAACS,QAAQ,EAAR,EAAQ;IAACC,WAAW,EAAC,OAAO;IAjBzF,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAiBmGC,KAAA,CAAAC,SAAS,CAACI,KAAK,GAAAN,MAAA;IAAGO,MAAI,EAAAR,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEQ,QAAA,CAAAC,YAAY,MAAMP,SAAS,CAACI,KAAK;iEAAzDL,KAAA,CAAAC,SAAS,CAACI,KAAK,E,+BAEtGf,mBAAA,CAAkE;IAA5DH,KAAK,EAAC;EAAwC,GAAC,QAAM,sB,gBAC3DG,mBAAA,CAAqJ;IAA9IH,KAAK,EAAC,sBAAsB;IAACQ,IAAI,EAAC,MAAM;IAACC,QAAQ,EAAR,EAAQ;IAACC,WAAW,EAAC,OAAO;IApBxF,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAoBkGC,KAAA,CAAAC,SAAS,CAACQ,KAAK,GAAAV,MAAA;IAAGO,MAAI,EAAAR,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAAEQ,QAAA,CAAAG,eAAe,MAAMT,SAAS,CAACQ,KAAK;iEAA5DT,KAAA,CAAAC,SAAS,CAACQ,KAAK,E,KAEvGnB,mBAAA,CASM,OATNqB,UASM,G,gBARJrB,mBAAA,CAKO;IALCsB,IAAI,EAAC,WAAW;IAACzB,KAAK,EAAC,sBAAsB;IAvBjE,uBAAAW,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAuB2EC,KAAA,CAAAC,SAAS,CAACY,GAAG,GAAAd,MAAA;kCAC5ET,mBAAA,CAAmC;IAA3BwB,KAAK,EAAC;EAAE,GAAC,WAAS,uB,kBAC1B1B,mBAAA,CAESC,SAAA,QA3BrB0B,WAAA,CAyBwCC,IAAA,CAAAC,UAAU,EAAvBC,SAAS;yBAAxB9B,mBAAA,CAES;MAFgC+B,GAAG,EAAED,SAAS,CAACE,EAAE;MAAGN,KAAK,EAAEI;wBAC/DA,SAAS,CAACG,EAAE,wBA1B7BC,UAAA;2EAuB2EtB,KAAA,CAAAC,SAAS,CAACY,GAAG,E,+BAM5EvB,mBAAA,CAAsE;IAAhEH,KAAK,EAAC;EAAwC,GAAC,YAAU,sB,4BAC/DG,mBAAA,CAAiD;IAA1CK,IAAI,EAAC,MAAM;IAACR,KAAK,EAAC;mCAG7BG,mBAAA,CAAoF;IAA5EH,KAAK,EAAC,qBAAqB;IAAEoC,OAAK,EAAAzB,MAAA,QAAAA,MAAA,MAjClD0B,cAAA,KAAAC,IAAA,KAiC4DlB,QAAA,CAAAmB,eAAA,IAAAnB,QAAA,CAAAmB,eAAA,IAAAD,IAAA,CAAe;KAAE,QAAM,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import Swal from 'sweetalert2';\nexport default {\n  data() {\n    return {\n      empleo: {\n        apellidos: \"\",\n        nombre: \"\",\n        email: \"\",\n        movil: \"\",\n        PDFfile: \"\"\n      }\n    };\n  },\n  components: {},\n  methods: {\n    validarTelefono(telefono) {\n      if (telefono == '') {\n        this.mostrarAlerta('Error', 'El teléfono con formato no valido', 'error');\n      }\n      const regex = /^[67]\\d{8}$/;\n      if (!regex.test(telefono)) {\n        this.mostrarAlerta('Error', 'El teléfono con formato no valido', 'error');\n      }\n    },\n    validarEmail(email) {\n      if (email == \"\") {\n        this.mostrarAlerta(\"Error\", \"El email con formato no valido\", \"error\");\n      }\n      const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n      if (!regex.test(email)) {\n        this.mostrarAlerta(\"Error\", \"El email con formato no valido\", \"error\");\n      }\n    },\n    mostrarAlerta(titulo, mensaje, icono) {\n      Swal.fire({\n        title: titulo,\n        text: mensaje,\n        icon: icono,\n        customClass: {\n          container: 'custom-alert-container',\n          popup: 'custom-alert-popup',\n          modal: 'custom-alert-modal'\n        }\n      });\n    },\n    async grabarCandidato() {\n      if (this.empleo.nombre && this.empleo.apellidos) {\n        try {\n          const response = await fetch('http://localhost:3000/candidatos');\n          if (!response.ok) {\n            throw new Error(\"Error al obtener a los candidatos\");\n          }\n          const crearResponse = await fetch('http://localhost:3000/candidatos', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.empleo)\n          });\n          if (!crearResponse.ok) {\n            throw new Error('Error al guardar el candidato: ' + crearResponse.statusText);\n          }\n\n          // const nuevoCandidato = await crearResponse.JSON();\n          this.mostrarAlerta('Aviso', 'Candidato grabado correctamente', 'success');\n        } catch (error) {\n          console.error(error);\n          this.mostrarAlerta('Error', 'No se pudo grabar el cliente.', 'error');\n        }\n      } else {\n        this.mostrarAlerta('Error', 'Por favor, completa todos los campos requeridos.', 'error');\n      }\n    }\n  }\n};","map":{"version":3,"names":["Swal","data","empleo","apellidos","nombre","email","movil","PDFfile","components","methods","validarTelefono","telefono","mostrarAlerta","regex","test","validarEmail","titulo","mensaje","icono","fire","title","text","icon","customClass","container","popup","modal","grabarCandidato","response","fetch","ok","Error","crearResponse","method","headers","body","JSON","stringify","statusText","error","console"],"sources":["/home/a23johanfav/apontejohan/src/components/TablaEmpleo.vue"],"sourcesContent":["<template>\n  <NavBar></NavBar>\n  <div class=\"container-fluid border p-4\">\n      <form lass=\"form-in-line\" action=\"\">\n          <div class=\"col-10 col-m-6 col-lg-8 mx-auto\">\n              <div class=\"input-group-text mb-3\">\n                  <span class=\"input-group-text custom-span me-2\">Apellidos</span>\n                  <input type=\"text\" class=\"form-control sm w-50\" placeholder=\"Apellidos\" v-model=\"empleo.apellidos\">\n                  <span class=\"input-group-text custom-span mx-2\">Nombre</span>\n                  <input type=\"text\" class=\"form-control sm w-50\" placeholder=\"Nombre\" v-model=\"empleo.nombre\">\n              </div>\n              <div class=\"input-group-text mb-3\">\n                  <span class=\"input-group-text custom-span me-2\">Email</span>\n                  <input type=\"email\" class=\"form-control sm w-70\" placeholder=\"Email\" @blur=\"validarEmail(this.empleo.email)\" v-model=\"empleo.email\">\n                  <span class=\"input-group-text custom-span mx-2\">Movil</span>\n                  <input type=\"text\" class=\"form-control sm w-30\" placeholder=\"Movil\" @blur=\"validarTelefono(this.empleo.movil)\" v-model=\"empleo.movil\">\n              </div>\n              <div class=\"input-group-text mb-3\">\n                  <span class=\"input-group-text custom-span me-2\">CV (PDF)</span>\n                  <input type=\"file\" class=\"form-control\">\n              </div>\n              <button type=\"button\" class=\"btn btn-primary px-3\" @click=\"grabarCandidato()\">Enviar</button>\n          </div>\n      </form>\n  </div>\n</template>\n<script>\n  import Swal from 'sweetalert2';\n  export default {\n\n      data() {\n          return  {\n              empleo: {\n                  apellidos: \"\",\n                  nombre: \"\",\n                  email: \"\",\n                  movil: \"\",\n                  PDFfile: \"\"\n              }\n          }\n      },\n      components: {\n      },\n      methods: {\n          validarTelefono(telefono){\n              if (telefono =='') {\n              this.mostrarAlerta('Error', 'El teléfono con formato no valido', 'error');\n              }\n              \n              const regex = /^[67]\\d{8}$/;\n              if (!regex.test(telefono)) {\n              this.mostrarAlerta('Error', 'El teléfono con formato no valido', 'error')\n              }\n          },\n          validarEmail(email) {\n              if (email == \"\") {\n                  this.mostrarAlerta(\n                  \"Error\",\n                  \"El email con formato no valido\",\n                  \"error\"\n                  );\n              }\n              const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n              if (!regex.test(email)) {\n                  this.mostrarAlerta(\n                  \"Error\",\n                  \"El email con formato no valido\",\n                  \"error\"\n                  );\n              }\n              },\n          mostrarAlerta(titulo, mensaje, icono) {\n              Swal.fire({\n              title: titulo,\n              text: mensaje,\n              icon: icono,\n              customClass: {\n                  container: 'custom-alert-container',\n                  popup: 'custom-alert-popup',\n                  modal: 'custom-alert-modal'\n              }\n              })\n          },\n          async grabarCandidato() {\n              if (this.empleo.nombre && this.empleo.apellidos) {\n                  try {\n                      const response = await fetch('http://localhost:3000/candidatos');\n                      if (!response.ok) {\n                          throw new Error(\"Error al obtener a los candidatos\");\n                      }\n\n                      const crearResponse = await fetch('http://localhost:3000/candidatos', {\n                          method: 'POST',\n                          headers: {\n                              'Content-Type': 'application/json'\n                          },\n                          body: JSON.stringify(this.empleo)\n                      });\n\n                      if (!crearResponse.ok) {\n                          throw new Error('Error al guardar el candidato: ' + crearResponse.statusText);\n                      }\n\n                      // const nuevoCandidato = await crearResponse.JSON();\n                      this.mostrarAlerta('Aviso', 'Candidato grabado correctamente', 'success');\n\n                  } catch (error) {\n                      console.error(error);\n                      this.mostrarAlerta('Error', 'No se pudo grabar el cliente.', 'error');\n                  }\n              } else {\n                  this.mostrarAlerta('Error', 'Por favor, completa todos los campos requeridos.', 'error');\n              }\n          }\n      }\n  }\n</script>"],"mappings":"AA2BE,OAAOA,IAAG,MAAO,aAAa;AAC9B,eAAe;EAEXC,IAAIA,CAAA,EAAG;IACH,OAAQ;MACJC,MAAM,EAAE;QACJC,SAAS,EAAE,EAAE;QACbC,MAAM,EAAE,EAAE;QACVC,KAAK,EAAE,EAAE;QACTC,KAAK,EAAE,EAAE;QACTC,OAAO,EAAE;MACb;IACJ;EACJ,CAAC;EACDC,UAAU,EAAE,CACZ,CAAC;EACDC,OAAO,EAAE;IACLC,eAAeA,CAACC,QAAQ,EAAC;MACrB,IAAIA,QAAO,IAAI,EAAE,EAAE;QACnB,IAAI,CAACC,aAAa,CAAC,OAAO,EAAE,mCAAmC,EAAE,OAAO,CAAC;MACzE;MAEA,MAAMC,KAAI,GAAI,aAAa;MAC3B,IAAI,CAACA,KAAK,CAACC,IAAI,CAACH,QAAQ,CAAC,EAAE;QAC3B,IAAI,CAACC,aAAa,CAAC,OAAO,EAAE,mCAAmC,EAAE,OAAO;MACxE;IACJ,CAAC;IACDG,YAAYA,CAACV,KAAK,EAAE;MAChB,IAAIA,KAAI,IAAK,EAAE,EAAE;QACb,IAAI,CAACO,aAAa,CAClB,OAAO,EACP,gCAAgC,EAChC,OACA,CAAC;MACL;MACA,MAAMC,KAAI,GAAI,kDAAkD;MAChE,IAAI,CAACA,KAAK,CAACC,IAAI,CAACT,KAAK,CAAC,EAAE;QACpB,IAAI,CAACO,aAAa,CAClB,OAAO,EACP,gCAAgC,EAChC,OACA,CAAC;MACL;IACA,CAAC;IACLA,aAAaA,CAACI,MAAM,EAAEC,OAAO,EAAEC,KAAK,EAAE;MAClClB,IAAI,CAACmB,IAAI,CAAC;QACVC,KAAK,EAAEJ,MAAM;QACbK,IAAI,EAAEJ,OAAO;QACbK,IAAI,EAAEJ,KAAK;QACXK,WAAW,EAAE;UACTC,SAAS,EAAE,wBAAwB;UACnCC,KAAK,EAAE,oBAAoB;UAC3BC,KAAK,EAAE;QACX;MACA,CAAC;IACL,CAAC;IACD,MAAMC,eAAeA,CAAA,EAAG;MACpB,IAAI,IAAI,CAACzB,MAAM,CAACE,MAAK,IAAK,IAAI,CAACF,MAAM,CAACC,SAAS,EAAE;QAC7C,IAAI;UACA,MAAMyB,QAAO,GAAI,MAAMC,KAAK,CAAC,kCAAkC,CAAC;UAChE,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;YACd,MAAM,IAAIC,KAAK,CAAC,mCAAmC,CAAC;UACxD;UAEA,MAAMC,aAAY,GAAI,MAAMH,KAAK,CAAC,kCAAkC,EAAE;YAClEI,MAAM,EAAE,MAAM;YACdC,OAAO,EAAE;cACL,cAAc,EAAE;YACpB,CAAC;YACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC,IAAI,CAACnC,MAAM;UACpC,CAAC,CAAC;UAEF,IAAI,CAAC8B,aAAa,CAACF,EAAE,EAAE;YACnB,MAAM,IAAIC,KAAK,CAAC,iCAAgC,GAAIC,aAAa,CAACM,UAAU,CAAC;UACjF;;UAEA;UACA,IAAI,CAAC1B,aAAa,CAAC,OAAO,EAAE,iCAAiC,EAAE,SAAS,CAAC;QAE7E,EAAE,OAAO2B,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;UACpB,IAAI,CAAC3B,aAAa,CAAC,OAAO,EAAE,+BAA+B,EAAE,OAAO,CAAC;QACzE;MACJ,OAAO;QACH,IAAI,CAACA,aAAa,CAAC,OAAO,EAAE,kDAAkD,EAAE,OAAO,CAAC;MAC5F;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.filter.js\";\nimport NavBar from './NavBar.vue';\nimport Swal from 'sweetalert2';\nexport default {\n  name: \"TablaClientes\",\n  components: {\n    NavBar\n  },\n  data() {\n    return {\n      cliente: {\n        dni: '',\n        alta: '',\n        apellidos: '',\n        nombre: '',\n        direccion: '',\n        email: '',\n        provincia: '',\n        municipio: '',\n        baja: ''\n      },\n      clientes: [],\n      provincias: [],\n      municipios: [],\n      errores: [],\n      isChecked: false\n    };\n  },\n  mounted() {\n    this.getClientes();\n  },\n  computed: {\n    filtroClientes() {\n      if (this.isChecked) {\n        return this.clientes;\n      } else {\n        return this.clientes.filter(cliente => !cliente.baja);\n      }\n    }\n  },\n  methods: {\n    validarDNI(dni) {\n      if (dni === '') {\n        // Si el campo está vacío, no hace nada\n        return true;\n      }\n      dni = dni.toUpperCase(); // Convertir a mayúsculas\n      this.cliente.dni = dni;\n      // Comprobar el formato del DNI/NIE\n      const dniRegex = /^[XYZ0-9][0-9]{7}[A-Z]$/; // Formato 8 dígitos seguido de 1 letra\n\n      if (!dniRegex.test(dni)) {\n        this.mostrarAlerta('Error', 'El NIE/DNI con formato no válido.', 'error');\n        return false;\n      }\n\n      // Inicializar variables para el cálculo\n      let dniNum = dni.substring(0, 8); // Extraer los númerhttp://localhost:3000/provinciasos\n      const letra = dni.charAt(8); // Obtener la letra en la posición 8\n      // Identificación del NIE y sustitución\n      if (dniNum.charAt(0) === 'X') {\n        dniNum = dniNum.substring(1, 8);\n        dniNum = '0' + dniNum; // Sustituir X por 0\n      } else if (dniNum.charAt(0) === 'Y') {\n        dniNum = dniNum.substring(1, 8);\n        dniNum = '1' + dniNum; // Sustituir Y por 1\n      } else if (dni.charAt(0) === 'Z') {\n        dniNum = dniNum.substring(1, 8);\n        dniNum = '2' + dniNum; // Sustituir Z por 2\n      }\n\n      // Comprobar la letra esperada\n      const letras = 'TRWAGMYFPDXBNJZSQVHLCKE'; // Letras válidas para el DNI\n      const letraCalculada = letras[dniNum % 23]; // Calcular la letra esperada\n      if (letra !== letraCalculada) {\n        this.mostrarAlerta('Error', 'DNI/NIE Incorrecto.', 'error');\n        return false;\n      }\n      return true; // DNI/NIE válido\n    },\n    async getClientes() {\n      try {\n        const response = await fetch('http://localhost:3000/clientes');\n        if (!response.ok) {\n          throw new Error('Error en la solicitud:' + response.statusText);\n        }\n        this.clientes = await response.json();\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getProvincias() {\n      try {\n        const response = await fetch('http://localhost:3000/provincias');\n        if (!response.ok) {\n          throw new Error('Error en la solicitud:' + response.statusText);\n        }\n        this.provincias = await response.json();\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    mostrarAlerta(titulo, mensaje, icono) {\n      Swal.fire({\n        title: titulo,\n        text: mensaje,\n        icon: icono,\n        customClass: {\n          container: 'custom-alert-container',\n          popup: 'custom-alert-popup',\n          modal: 'custom-alert-modal'\n        }\n      });\n    },\n    grabarcliente() {\n      if (this.cliente.dni && this.cliente.email) {\n        this.clientes.push({\n          ...this.cliente\n        });\n        console.log(\"Cliente agregado\");\n      } else {\n        console.log(\"Error: completa todos los campos\");\n      }\n    }\n  }\n};","map":{"version":3,"names":["NavBar","Swal","name","components","data","cliente","dni","alta","apellidos","nombre","direccion","email","provincia","municipio","baja","clientes","provincias","municipios","errores","isChecked","mounted","getClientes","computed","filtroClientes","filter","methods","validarDNI","toUpperCase","dniRegex","test","mostrarAlerta","dniNum","substring","letra","charAt","letras","letraCalculada","response","fetch","ok","Error","statusText","json","error","console","getProvincias","titulo","mensaje","icono","fire","title","text","icon","customClass","container","popup","modal","grabarcliente","push","log"],"sources":["/home/a23johanfav/apontejohan/src/components/TablaClientes.vue"],"sourcesContent":["<template>\n  <NavBar />\n  <div class=\"row\">\n    <h5 class=\"text-center front-weight-bold\">GESTIÓN CLIENTES</h5>\n  </div>\n  <br>\n  <div class=\"container-fluid border p-4\">\n    <form class=\"form-in-line\">\n      <div class=\"col-10 col-m-6 col-lg-8 mx-auto\">\n        <div class=\"input-group-text mb-3\">\n          <span class=\"input-group-text custom-span me-2\">DNI/NIE:</span>\n          <input type=\"text\" class=\"form-control sm w-25\" placeholder=\"DNI-NIE\" v-model=\"cliente.dni\"\n            @blur=\"validarDNI(this.cliente.dni)\">\n\n          <span class=\"input-group-text custom-span ms-auto me-2\">Fecha Alta:</span>\n          <input type=\"date\" class=\"form-control sm w-25\" placeholder=\"Fecha Alta\" v-model=\"cliente.alta\">\n          <button class=\"input-group-text custom-span m-2 bg-primary text-light\"><i\n              class=\"bi bi-calendar-week\"></i></button>\n        </div>\n        <div class=\"input-group-text mb-3\">\n          <span class=\"input-group-text custom-span me-2\">Apellidos: </span>\n          <input type=\"text\" class=\"form-control sm w-50\" placeholder=\"Apellidos\" v-model=\"cliente.apellidos\">\n          <span class=\"input-group-text custom-span ms-2 me-2\">Nombre: </span>\n          <input type=\"text\" class=\"form-control sm w-50\" placeholder=\"Nombre\" v-model=\"cliente.nombre\">\n        </div>\n        <div class=\"input-group-text mb-3\">\n          <span class=\"input-group-text custom-span me-2\">Dirección: </span>\n          <input type=\"text\" class=\"form-control sm w-50\" placeholder=\"Dirección\" v-model=\"cliente.direccion\">\n          <span class=\"input-group-text custom-span ms-2 me-2\">Email: </span>\n          <input type=\"email\" class=\"form-control sm w-50\" placeholder=\"Email\" v-model=\"cliente.email\">\n        </div>\n\n        <div class=\"input-group-text mb-3\">\n          <span class=\"input-group-text custom-span me-2\">Provincia: </span>\n          <select class=\"form-select\" name=\"\" id=\"\">\n\n          </select>\n          <span class=\"input-group-text custom-span ms-2 me-2\">Municipio: </span>\n          <select name=\"municipio\" class=\"form-control sm w-75\" v-model=\"cliente.municipio\">\n            <option value=\"vigo\">Vigo</option>\n            <option value=\"tui\">Tui</option>\n            <option value=\"ponteareas\">Ponteareas</option>\n            <option value=\"porriño\">Porriño</option>\n          </select>\n\n          <input type=\"checkbox\" class=\"m-2\" name=\"historico\" id=\"\">\n          <label for=\"bg input-group-text custom-span ms-2 me-2\">Histórico</label>\n        </div>\n      </div>\n      <button class=\"btn btn-primary m-1\" @click.prevent=\"grabarcliente\">Guardar</button>\n      <button class=\"btn btn-primary m-1\" @click.prevent=\"mostrarcliente\">Mostrar</button>\n      <button class=\"btn btn-primary m-1\" @click.prevent=\"eliminarcliente\">Eliminar</button>\n    </form>\n  </div>\n\n\n  <div>\n    <div class=\"container my-5\">\n      <h2 class=\"mb-4\">Lista de Datos</h2>\n      <div class=\"container my-2\">\n        <div class=\"table-responsive\">\n          <table class=\"table table-striped\">\n            <thead class=\"table-info rounded-header\">\n              <tr>\n                <th scope=\"col\" class=\"w-15 text-center\">DNI</th>\n                <th scope=\"col\" class=\"w-25\">Apellidos</th>\n                <th scope=\"col\" class=\"w-25\">Nombre</th>\n                <th scope=\"col\" class=\"w-20 text-center\">Email</th>\n                <th scope=\"col\" class=\"w-10 text-center\">Fecha Baja</th>\n                <th scope=\"col\" class=\"pale-yellow\">Acciones</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"cliente in filtroClientes\" :key=\"cliente.id\">\n                <td class=\"align-middle\">{{ cliente.dni }}</td>\n                <td class=\"align-middle\">{{ cliente.apellidos }}</td>\n                <td class=\"align-middle\">{{ cliente.nombre }}</td>\n                <td class=\"align-middle\">{{ cliente.email }}</td>\n                <td class=\"align-middle\">{{ cliente.baja }}</td>\n                <td class=\"text-center align-middle pale-yellow\">\n                  <div>\n                    <button class=\"btn btn-warning m-2\" @click=\"seleccionaCliente(cliente)\">\n                      <i class=\"fas fa-pencil-alt\"></i>\n                    </button>\n                    <button class=\"btn btn-danger m-2\" @click=\"deleteCliente(cliente.dni)\">\n                      <i class=\"bi bi-trash\"></i>\n                    </button>\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport NavBar from './NavBar.vue';\nimport Swal from 'sweetalert2';\n\nexport default {\n  name: \"TablaClientes\",\n  components: {\n    NavBar\n  },\n\n  data() {\n    return {\n\n      cliente: {\n        dni: '',\n        alta: '',\n        apellidos: '',\n        nombre: '',\n        direccion: '',\n        email: '',\n        provincia: '',\n        municipio: '',\n        baja: ''\n      },\n\n      clientes: [],\n      provincias: [],\n      municipios: [],\n      errores: [],\n      isChecked: false\n    };\n  },\n\n  mounted() {\n      this.getClientes();\n    \n  },\n\n\n  computed: {\n    filtroClientes() {\n      if (this.isChecked) {\n        return this.clientes;\n      } else {\n        return this.clientes.filter(cliente => !cliente.baja);\n      }\n    }\n  },\n\n  methods: {\n    validarDNI(dni) {\n      if (dni === '') {\n        // Si el campo está vacío, no hace nada\n        return true;\n      }\n      dni = dni.toUpperCase(); // Convertir a mayúsculas\n      this.cliente.dni = dni;\n      // Comprobar el formato del DNI/NIE\n      const dniRegex = /^[XYZ0-9][0-9]{7}[A-Z]$/; // Formato 8 dígitos seguido de 1 letra\n\n      if (!dniRegex.test(dni)) {\n        this.mostrarAlerta('Error', 'El NIE/DNI con formato no válido.', 'error');\n        return false;\n      }\n\n      // Inicializar variables para el cálculo\n      let dniNum = dni.substring(0, 8); // Extraer los númerhttp://localhost:3000/provinciasos\n      const letra = dni.charAt(8); // Obtener la letra en la posición 8\n      // Identificación del NIE y sustitución\n      if (dniNum.charAt(0) === 'X') {\n        dniNum = dniNum.substring(1, 8)\n        dniNum = '0' + dniNum; // Sustituir X por 0\n      } else if (dniNum.charAt(0) === 'Y') {\n        dniNum = dniNum.substring(1, 8)\n        dniNum = '1' + dniNum; // Sustituir Y por 1\n      } else if (dni.charAt(0) === 'Z') {\n        dniNum = dniNum.substring(1, 8)\n        dniNum = '2' + dniNum; // Sustituir Z por 2\n      }\n\n      // Comprobar la letra esperada\n      const letras = 'TRWAGMYFPDXBNJZSQVHLCKE'; // Letras válidas para el DNI\n      const letraCalculada = letras[dniNum % 23]; // Calcular la letra esperada\n      if (letra !== letraCalculada) {\n        this.mostrarAlerta('Error', 'DNI/NIE Incorrecto.', 'error');\n        return false;\n      }\n\n      return true; // DNI/NIE válido\n    \n    },\n\n  async getClientes(){\n      try{\n        const response = await fetch('http://localhost:3000/clientes');\n        if(!response.ok){\n          throw new Error('Error en la solicitud:' + response.statusText);\n        }\n        this.clientes = await response.json();\n      } catch(error){\n        console.error(error);\n      }\n    },  \n    async getProvincias(){\n      try{\n        const response = await fetch('http://localhost:3000/provincias');\n        if(!response.ok){\n          throw new Error('Error en la solicitud:' + response.statusText);\n        }\n        this.provincias = await response.json();\n      } catch(error){\n        console.error(error);\n      }\n    }, \n\n    mostrarAlerta(titulo, mensaje, icono) {\n      Swal.fire({\n        title: titulo,\n        text: mensaje,\n        icon: icono,\n        customClass: {\n          container: 'custom-alert-container',\n          popup: 'custom-alert-popup',\n          modal: 'custom-alert-modal'\n        }\n      })\n    },\n\n    grabarcliente() {\n      if (this.cliente.dni && this.cliente.email) {\n        this.clientes.push({ ...this.cliente });\n        console.log(\"Cliente agregado\");\n      } else {\n        console.log(\"Error: completa todos los campos\")\n      }\n    }\n  },\n\n\n\n\n}\n\n\n</script>\n\n<style scoped></style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
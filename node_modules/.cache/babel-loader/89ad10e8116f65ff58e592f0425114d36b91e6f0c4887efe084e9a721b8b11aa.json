{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/esnext.iterator.constructor.js\";\nimport \"core-js/modules/esnext.iterator.find.js\";\nimport Swal from 'sweetalert2';\nexport default {\n  name: \"TablaEmpleo\",\n  components: {},\n  data() {\n    return {\n      candidato: {\n        apellidos: '',\n        nombre: '',\n        email: '',\n        movil: '',\n        departamento: '',\n        modalidad: '',\n        avisoLegal: '',\n        comentario: ''\n      },\n      candidatos: [],\n      departamentos: [],\n      editMovil: false,\n      currentPage\n    };\n  },\n  mounted() {\n    this.getCandidatos();\n    this.getDepartamentos();\n  },\n  methods: {\n    async seleccionaCandidato(candidato) {\n      try {\n        this.limpiarFormulario();\n        const response = await fetch('http://localhost:3000/candidatos');\n        if (!response.ok) {\n          throw new Error('Error en la solicitud: ' + response.statusText);\n        }\n        const candidatos = await response.json();\n\n        // Encontrar el candidato por su DNI\n        const candidatoEncontrado = candidatos.find(c => c.movil === candidato.movil);\n        if (candidatoEncontrado) {\n          this.editMovil = true;\n          this.candidato = {\n            ...candidatoEncontrado\n          };\n        } else {\n          this.mostrarAlerta('Error', 'candidato no encontrado en el servidor.', 'error');\n        }\n      } catch (error) {\n        console.error(error);\n        this.mostrarAlerta('Error', 'No se pudo cargar el candidato desde el servidor.', 'error');\n      }\n    },\n    validarTelefono(telefono) {\n      if (telefono == '') {\n        this.mostrarAlerta('Error', 'El teléfono con formato no valido', 'error');\n      }\n      const regex = /^[67]\\d{8}$/;\n      if (!regex.test(telefono)) {\n        this.mostrarAlerta('Error', 'El teléfono con formato no valido', 'error');\n      }\n    },\n    validarEmail(email) {\n      if (email == '') {\n        this.mostrarAlerta('Error', 'El email con formato no valido', 'error');\n      }\n      const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n      if (!regex.test(email)) {\n        this.mostrarAlerta('Error', 'El email con formato no valido', 'error');\n      }\n    },\n    validarComentario(comentario) {\n      if (comentario.length > 256) {\n        this.mostrarAlerta('Error', 'el comentario no puede sobre pasar 256 caracteres', 'error');\n      }\n    },\n    mostrarAlerta(titulo, mensaje, icono) {\n      Swal.fire({\n        title: titulo,\n        text: mensaje,\n        icon: icono,\n        customClass: {\n          container: 'custom-alert-container',\n          popup: 'custom-alert-popup',\n          modal: 'custom-alert-modal'\n        }\n      });\n    },\n    limpiarFormulario() {\n      this.candidato = {\n        apellidos: '',\n        nombre: '',\n        email: '',\n        movil: '',\n        departamento: '',\n        modalidad: '',\n        avisoLegal: '',\n        comentario: ''\n      };\n      this.editMovil = false;\n    },\n    async grabarCandidato() {\n      const resultado = await Swal.fire({\n        title: '¿Estás seguro?',\n        text: '¿Deseas grabar el candidato?',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Sí, Grabar',\n        cancelButtonText: 'No, no grabar',\n        cancelButtonColor: '#d33',\n        confirmButtonColor: '#3085d6'\n      });\n      if (resultado.isConfirmed) {\n        // Verificar si los campos requeridos están llenos\n        if (this.candidato.apellidos && this.candidato.nombre && this.candidato.email && this.candidato.movil && this.candidato.apellidos && this.candidato.nombre && this.candidato.departamento && this.candidato.modalidad && this.candidato.avisoLegal == true) {\n          try {\n            if (this.candidato.avisoLegal) {\n              this.candidato.avisoLegal = \"si\";\n            }\n            const response = await fetch('http://localhost:3000/candidatos');\n            if (!response.ok) {\n              throw new Error('Error al obtener los candidatos: ' + response.statusText);\n            }\n            const candidatosExistentes = await response.json();\n            let candidatoExistente = candidatosExistentes.find(candidato => candidato.movil === this.candidato.movil);\n            if (candidatoExistente) {\n              candidatoExistente = this.candidato;\n              const actualizarResponse = await fetch(`http://localhost:3000/candidatos/${candidatoExistente.id}`, {\n                method: 'PUT',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(candidatoExistente)\n              });\n              if (!actualizarResponse.ok) {\n                throw new Error('Error al actualizar el candidato: ' + actualizarResponse.statusText);\n              }\n              this.mostrarAlerta('Aviso', 'Candidato reactivado correctamente', 'success');\n              this.getCandidatos();\n            } else {\n              const crearResponse = await fetch('http://localhost:3000/candidatos', {\n                method: 'POST',\n                headers: {\n                  'Content-Type': 'application/json'\n                },\n                body: JSON.stringify(this.candidato)\n              });\n              if (!crearResponse.ok) {\n                throw new Error('Error al guardar el candidato ' + crearResponse.statusText);\n              }\n              const nuevoCandidato = await crearResponse.json();\n              this.candidatos.push(nuevoCandidato);\n              this.mostrarAlerta('Aviso', 'Candidato grabado correctamente', 'success');\n              this.limpiarFormulario();\n            }\n          } catch (error) {\n            console.error(error);\n            this.mostrarAlerta('Error', 'No se pudo grabar el candidato.', 'error');\n          }\n        } else if (this.candidato.avisoLegal == false) {\n          this.mostrarAlerta('Error', 'Por favor, acepta las Políticas de Privacidad.', 'error');\n        } else {\n          this.mostrarAlerta('Error', 'Por favor, completa todos los campos requeridos.', 'error');\n        }\n      }\n    },\n    async getDepartamentos() {\n      try {\n        const response = await fetch('http://localhost:3000/departamentos');\n        if (!response.ok) {\n          throw new Error('Error en la solicitud:' + response.statusText);\n        }\n        this.departamentos = await response.json();\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async getCandidatos() {\n      try {\n        const response = await fetch('http://localhost:3000/candidatos');\n        if (!response.ok) {\n          throw new Error('Error en la solicitud:' + response.statusText);\n        }\n        this.candidatos = (await response.json()).sort((a, b) => a.apellidos.localeCompare(b.apellidos) || a.nombre.localeCompare(b.nombre));\n      } catch (error) {\n        console.error(error);\n      }\n    },\n    async deleteCandidato(movil) {\n      const resultado = await Swal.fire({\n        title: '¿Estás seguro?',\n        text: '¿Deseas eliminar el candidato?',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Sí, eliminar',\n        cancelButtonText: 'No, cancelar',\n        cancelButtonColor: '#d33',\n        confirmButtonColor: '#3085d6'\n      });\n      if (resultado.isConfirmed) {\n        try {\n          const response = await fetch(\"http://localhost:3000/candidatos\");\n          if (!response.ok) {\n            throw new Error(\"Error en la solicitud: \" + response.statusText);\n          }\n          const candidatos = await response.json();\n          const candidatoExistente = candidatos.find(candidato => candidato.movil === movil);\n          if (candidatoExistente) {\n            await fetch(`http://localhost:3000/candidatos/${candidatoExistente.id}`, {\n              // URL interpolada correctamente\n              method: \"DELETE\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              }\n            });\n            this.mostrarAlerta(\"Aviso\", \"candidato dado de baja correctamente\", \"success\");\n            this.getCandidatos(); // Actualizar lista de candidatos\n          } else {\n            this.mostrarAlerta(\"Error\", \"candidato no encontrado\", \"error\");\n          }\n        } catch (error) {\n          console.error(error);\n          this.mostrarAlerta(\"Error\", \"No se pudo dar de baja al candidato\", \"error\");\n        }\n      }\n    }\n  }\n};","map":{"version":3,"names":["Swal","name","components","data","candidato","apellidos","nombre","email","movil","departamento","modalidad","avisoLegal","comentario","candidatos","departamentos","editMovil","currentPage","mounted","getCandidatos","getDepartamentos","methods","seleccionaCandidato","limpiarFormulario","response","fetch","ok","Error","statusText","json","candidatoEncontrado","find","c","mostrarAlerta","error","console","validarTelefono","telefono","regex","test","validarEmail","validarComentario","length","titulo","mensaje","icono","fire","title","text","icon","customClass","container","popup","modal","grabarCandidato","resultado","showCancelButton","confirmButtonText","cancelButtonText","cancelButtonColor","confirmButtonColor","isConfirmed","candidatosExistentes","candidatoExistente","actualizarResponse","id","method","headers","body","JSON","stringify","crearResponse","nuevoCandidato","push","sort","a","b","localeCompare","deleteCandidato"],"sources":["/home/a23johanfav/apontejohan/src/components/TablaEmpleo.vue"],"sourcesContent":["<template>\n  <div class=\"row\">\n    <h3 class=\"mt-3 text-center front-weight-bold\"><i class=\"bi bi-people\"></i>TRABAJA CON NOSOTROS <router-link to=\"/\">\n        <button class=\"btn btn-customb\"><i class=\"bi bi-arrow-return-left \"></i></button></router-link></h3>\n  </div>\n  <br>\n  <div class=\"container-fluid border p-4\">\n    <form class=\"form-in-line\">\n      <div class=\"col-10 col-m-6 col-lg-6 mx-auto\">\n        <div class=\"input-group-text mb-3\">\n          <span class=\"input-group-text custom-span me-2\">Apellidos:</span>\n          <input type=\"text\" class=\"form-control sm w-50\" required placeholder=\"Apellidos\"\n            v-model=\"candidato.apellidos\">\n\n          <span class=\"input-group-text custom-span ms-2 me-2\">Nombre:</span>\n          <input type=\"text\" class=\"form-control sm w-50\" required placeholder=\"Nombre\" v-model=\"candidato.nombre\">\n        </div>\n        <div class=\"input-group-text mb-3\">\n          <span class=\"input-group-text custom-span ms-2 me-2\">Email: </span>\n          <input type=\"email\" class=\"form-control sm w-50\" required placeholder=\"Email\" v-model=\"candidato.email\"\n            @blur=\"validarEmail(this.candidato.email)\">\n\n          <span class=\"input-group-text custom-span ms-2 me-2\">Móvil:</span>\n          <input class=\"form-control sm w-25\" type=\"text\" required placeholder=\"Móvil\" v-model=\"candidato.movil\"\n            @blur=\"validarTelefono(this.candidato.movil)\" :disabled=\"editMovil\">\n\n\n\n        </div>\n\n        <div class=\"input-group-text mb-3\">\n          <span class=\"input-group-text custom-span ms-2 me-2\">Departamentos</span>\n          <select name=\"departamento\" class=\"form-control sm w-25 ms-2\" v-model=\"candidato.departamento\" required>\n            <option value=\"\" disabled>Departamentos</option>\n            <option v-for=\"departamento in departamentos\" :key=\"departamento.id\" :value=\"departamento\">\n              {{ departamento.nm }}\n            </option>\n          </select>\n\n          <span class=\"input-group-text custom-span ms-2 me-2\">Modalidades </span>\n          <div class=\"m-auto\">\n            <input class=\"mx-2\" type=\"radio\" name=\"modalidad\" v-model=\"candidato.modalidad\" value=\"remoto\" id=\"remoto\"\n              checked><label for=\"remoto\">Remoto</label>\n            <input class=\"mx-2\" type=\"radio\" name=\"modalidad\" v-model=\"candidato.modalidad\" value=\"hibrido\"\n              id=\"hibrido\"><label for=\"hibrido\">Hibrido</label>\n\n            <input class=\"mx-2\" type=\"radio\" name=\"modalidad\" v-model=\"candidato.modalidad\" value=\"presencial\"\n              id=\"presencial\"><label for=\"presencial\">Presencial</label>\n\n          </div>\n\n        </div>\n        <div class=\"input-group-text mb-3\">\n          <span class=\"input-group-text custom-span ms-2 me-2\" for=\"comentario\">Comentario: </span>\n          <textarea placeholder=\"Comentarios (Máximo 256 caracteres)\" class=\"form-control sm w-100\" maxlength=\"256\"\n            name=\"\" id=\"\" rows=\"4\" v-model=\"candidato.comentario\"\n            @blur=\"validarComentario(this.candidato.comentario)\"></textarea>\n\n        </div>\n        <div class=\"input-group-text mb-3\">\n\n          <span class=\"input-group-text custom-span ms-2 me-2\">CV (PDF) </span>\n          <input type=\"file\" class=\"form-control sm w-100\">\n\n        </div>\n        <input type=\"checkbox\" class=\"text-align-left\" name=\"\" id=\"\" v-model=\"candidato.avisoLegal\" required>He leido y\n        acepto la <router-link to=\"/privacidad\">Politica de privacidad</router-link>\n\n      </div>\n      <button class=\"btn btn-primary m-1\" @click.prevent=\"grabarCandidato\"\n        :disabled=\"!candidato.avisoLegal\">Enviar</button>\n    </form>\n  </div>\n\n\n  <div>\n    <div class=\"container my-5\">\n      <h2 class=\"mb-4\">Gestionar candidatos</h2>\n      <div class=\"container my-2\">\n        <div class=\"table-responsive\">\n          <table class=\"table table-striped\">\n            <thead class=\"table-info rounded-header\">\n              <tr>\n                <th scope=\"col\" class=\"w-10\">Apellidos</th>\n                <th scope=\"col\" class=\"w-10\">Nombre</th>\n                <th scope=\"col\" class=\"w-10\">Móvil</th>\n                <th scope=\"col\" class=\"w-10\">Departamento</th>\n                <th scope=\"col\" class=\"w-10 text-center\">Modalidad</th>\n                <th scope=\"col\" class=\"pale-yellow table-warning\">Acciones</th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr v-for=\"candidato in candidatos\" :key=\"candidato.id\">\n                <td class=\"align-middle \">{{ candidato.apellidos }}</td>\n                <td class=\"align-middle\">{{ candidato.nombre }}</td>\n                <td class=\"align-middle\">{{ candidato.movil }}</td>\n                <td class=\"align-middle\">{{ candidato.departamento.nm }}</td>\n\n                <td class=\"align-middle\">{{ candidato.modalidad }}</td>\n                <td class=\"text-center align-middle pale-yellow table-warning\">\n                  <div>\n                    <button class=\"btn btn-warning m-2\" @click=\"seleccionaCandidato(candidato)\">\n                      <i class=\"fas fa-pencil-alt\"></i>\n                    </button>\n\n                    <button class=\"btn btn-danger m-2\" @click=\"deleteCandidato(candidato.movil)\">\n                      <i class=\"bi bi-trash\"></i>\n                    </button>\n\n                  </div>\n                </td>\n              </tr>\n            </tbody>\n\n          </table>\n          <div class=\"d-flex justify-content-center my-3\">\n            <button class=\"btn btn-primary\" :disabled=\"currentPage === 1\" @click=\"paginaAnterior\">\n              <i class=\"bi bi-chevron-left\"> </i>\n            </button>\n            <span class=\"mx-3 align-self-center\">Página {{ currentPage }}</span>\n\n            <button class=\"btn btn-primary\" :disabled=\"currentPage * pageSize >= filtroUsuarios.length\"\n              @click=\"siguientePagina\">\n              <i class=\"bi bi-chevron-right\"></i>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</template>\n\n<script>\nimport Swal from 'sweetalert2';\n\nexport default {\n  name: \"TablaEmpleo\",\n  components: {\n  },\n\n  data() {\n    return {\n      candidato: {\n        apellidos: '',\n        nombre: '',\n        email: '',\n        movil: '',\n        departamento: '',\n        modalidad: '',\n        avisoLegal: '',\n        comentario: ''\n      },\n      candidatos: [],\n      departamentos: [],\n      editMovil: false,\n      currentPage\n    }\n  },\n\n  mounted() {\n    this.getCandidatos();\n    this.getDepartamentos();\n  },\n\n  methods: {\n\n    async seleccionaCandidato(candidato) {\n      try {\n        this.limpiarFormulario()\n        const response = await fetch('http://localhost:3000/candidatos');\n        if (!response.ok) {\n          throw new Error('Error en la solicitud: ' + response.statusText);\n        }\n        const candidatos = await response.json();\n\n        // Encontrar el candidato por su DNI\n        const candidatoEncontrado = candidatos.find(c => c.movil === candidato.movil);\n\n\n        if (candidatoEncontrado) {\n          this.editMovil = true;\n          this.candidato = { ...candidatoEncontrado };\n        } else {\n          this.mostrarAlerta('Error', 'candidato no encontrado en el servidor.', 'error');\n        }\n      } catch (error) {\n        console.error(error);\n        this.mostrarAlerta('Error', 'No se pudo cargar el candidato desde el servidor.', 'error');\n      }\n    },\n\n    validarTelefono(telefono) {\n      if (telefono == '') {\n        this.mostrarAlerta('Error', 'El teléfono con formato no valido', 'error');\n      }\n      const regex = /^[67]\\d{8}$/;\n      if (!regex.test(telefono)) {\n        this.mostrarAlerta('Error', 'El teléfono con formato no valido', 'error')\n      }\n    },\n\n    validarEmail(email) {\n      if (email == '') {\n        this.mostrarAlerta('Error', 'El email con formato no valido', 'error');\n      }\n      const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n      if (!regex.test(email)) {\n        this.mostrarAlerta('Error', 'El email con formato no valido', 'error')\n      }\n    },\n\n    validarComentario(comentario) {\n      if (comentario.length > 256) {\n        this.mostrarAlerta('Error', 'el comentario no puede sobre pasar 256 caracteres', 'error')\n      }\n    },\n    mostrarAlerta(titulo, mensaje, icono) {\n      Swal.fire({\n        title: titulo,\n        text: mensaje,\n        icon: icono,\n        customClass: {\n          container: 'custom-alert-container',\n          popup: 'custom-alert-popup',\n          modal: 'custom-alert-modal'\n        }\n      })\n    },\n\n    limpiarFormulario() {\n      this.candidato = {\n        apellidos: '',\n        nombre: '',\n        email: '',\n        movil: '',\n        departamento: '',\n        modalidad: '',\n        avisoLegal: '',\n        comentario: ''\n      }\n      this.editMovil = false;\n    },\n\n    async grabarCandidato() {\n      const resultado = await Swal.fire({\n        title: '¿Estás seguro?',\n        text: '¿Deseas grabar el candidato?',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Sí, Grabar',\n        cancelButtonText: 'No, no grabar',\n        cancelButtonColor: '#d33',\n        confirmButtonColor: '#3085d6',\n      })\n\n      if (resultado.isConfirmed) {\n      // Verificar si los campos requeridos están llenos\n      if (this.candidato.apellidos && this.candidato.nombre && this.candidato.email && this.candidato.movil && this.candidato.apellidos\n       && this.candidato.nombre && this.candidato.departamento && this.candidato.modalidad && this.candidato.avisoLegal==true) {\n        try {\n          if (this.candidato.avisoLegal){\n            this.candidato.avisoLegal = \"si\";\n          }\n\n          const response = await fetch('http://localhost:3000/candidatos');\n          if (!response.ok) {\n            throw new Error('Error al obtener los candidatos: ' + response.statusText);\n          }\n\n          const candidatosExistentes = await response.json();\n\n          let candidatoExistente = candidatosExistentes.find(candidato => candidato.movil === this.candidato.movil);\n\n          if (candidatoExistente) {\n            candidatoExistente = this.candidato;\n            \n            \n            const actualizarResponse = await fetch(`http://localhost:3000/candidatos/${candidatoExistente.id}`, {\n              method: 'PUT',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n\n              body: JSON.stringify(candidatoExistente),\n            });\n\n            if (!actualizarResponse.ok) {\n              throw new Error('Error al actualizar el candidato: ' + actualizarResponse.statusText);\n            }\n\n            this.mostrarAlerta('Aviso', 'Candidato reactivado correctamente', 'success');\n            this.getCandidatos();\n          } \n          \n          else {\n            const crearResponse = await fetch('http://localhost:3000/candidatos', {\n              method: 'POST',\n              headers: {\n                'Content-Type': 'application/json',\n              },\n              body: JSON.stringify(this.candidato),\n            });\n\n            if (!crearResponse.ok) {\n              throw new Error('Error al guardar el candidato ' + crearResponse.statusText);\n            }\n\n            const nuevoCandidato = await crearResponse.json();\n            this.candidatos.push(nuevoCandidato);\n            this.mostrarAlerta('Aviso', 'Candidato grabado correctamente', 'success');\n            this.limpiarFormulario();\n          }\n        } catch (error) {\n          console.error(error);\n          this.mostrarAlerta('Error', 'No se pudo grabar el candidato.', 'error');\n        }\n      } else if (this.candidato.avisoLegal == false) {\n        this.mostrarAlerta('Error', 'Por favor, acepta las Políticas de Privacidad.', 'error');\n      }   \n      else {\n        this.mostrarAlerta('Error', 'Por favor, completa todos los campos requeridos.', 'error');\n      }}\n    },\n\n    async getDepartamentos() {\n      try {\n        const response = await fetch('http://localhost:3000/departamentos');\n        if (!response.ok) {\n          throw new Error('Error en la solicitud:' + response.statusText);\n        }\n        this.departamentos = await response.json();\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async getCandidatos() {\n      try {\n        const response = await fetch('http://localhost:3000/candidatos');\n        if (!response.ok) {\n          throw new Error('Error en la solicitud:' + response.statusText);\n        }\n        this.candidatos = (await response.json()).sort((a, b) => a.apellidos.localeCompare(b.apellidos) || a.nombre.localeCompare(b.nombre));\n      } catch (error) {\n        console.error(error);\n      }\n    },\n\n    async deleteCandidato(movil) {\n      const resultado = await Swal.fire({\n        title: '¿Estás seguro?',\n        text: '¿Deseas eliminar el candidato?',\n        icon: 'warning',\n        showCancelButton: true,\n        confirmButtonText: 'Sí, eliminar',\n        cancelButtonText: 'No, cancelar',\n        cancelButtonColor: '#d33',\n        confirmButtonColor: '#3085d6',\n      })\n\n      if (resultado.isConfirmed) {\n        try {\n\n          const response = await fetch(\"http://localhost:3000/candidatos\");\n          if (!response.ok) {\n            throw new Error(\"Error en la solicitud: \" + response.statusText);\n          }\n\n          const candidatos = await response.json();\n          const candidatoExistente = candidatos.find(candidato => candidato.movil === movil);\n\n          if (candidatoExistente) {\n\n            await fetch(`http://localhost:3000/candidatos/${candidatoExistente.id}`, { // URL interpolada correctamente\n              method: \"DELETE\",\n              headers: {\n                \"Content-Type\": \"application/json\",\n              },\n            });\n\n            this.mostrarAlerta(\"Aviso\", \"candidato dado de baja correctamente\", \"success\");\n            this.getCandidatos(); // Actualizar lista de candidatos\n\n          } else {\n            this.mostrarAlerta(\"Error\", \"candidato no encontrado\", \"error\");\n          }\n        } catch (error) {\n          console.error(error);\n          this.mostrarAlerta(\"Error\", \"No se pudo dar de baja al candidato\", \"error\");\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style></style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
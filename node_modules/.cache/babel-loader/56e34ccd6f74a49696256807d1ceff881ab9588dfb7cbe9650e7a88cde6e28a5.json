{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport Swal from 'sweetalert2';\nexport default {\n  name: \"TablaEmpleo\",\n  components: {},\n  data() {\n    return {\n      candidato: {\n        apellidos: '',\n        nombre: '',\n        email: '',\n        movil: '',\n        departamento: ''\n      },\n      departamentos: [],\n      categorias: []\n    };\n  },\n  mounted() {\n    this.getDepartamentos();\n  },\n  methods: {\n    validarTelefono(telefono) {\n      if (telefono == '') {\n        this.mostrarAlerta('Error', 'El teléfono con formato no valido', 'error');\n      }\n      const regex = /^[67]\\d{8}$/;\n      if (!regex.test(telefono)) {\n        this.mostrarAlerta('Error', 'El teléfono con formato no valido', 'error');\n      }\n    },\n    validarEmail(email) {\n      if (email == '') {\n        this.mostrarAlerta('Error', 'El email con formato no valido', 'error');\n      }\n      const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n      if (!regex.test(email)) {\n        this.mostrarAlerta('Error', 'El email con formato no valido', 'error');\n      }\n    },\n    mostrarAlerta(titulo, mensaje, icono) {\n      Swal.fire({\n        title: titulo,\n        text: mensaje,\n        icon: icono,\n        customClass: {\n          container: 'custom-alert-container',\n          popup: 'custom-alert-popup',\n          modal: 'custom-alert-modal'\n        }\n      });\n    },\n    async grabarCandidato() {\n      // Verificar si los campos requeridos están llenos\n      if (this.candidato.apellidos && this.candidato.nombre && this.candidato.email && this.candidato.movil && this.candidato.apellidos && this.candidato.nombre) {\n        try {\n          const response = await fetch('http://localhost:3000/candidatos');\n          if (!response.ok) {\n            throw new Error('Error al obtener los candidatos: ' + response.statusText);\n          }\n          const crearResponse = await fetch('http://localhost:3000/candidatos', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify(this.candidato)\n          });\n          if (!crearResponse.ok) {\n            throw new Error('Error al guardar el candidato ' + crearResponse.statusText);\n          }\n          const nuevoCandidato = await crearResponse.json();\n          this.candidatos.push(nuevoCandidato);\n          this.mostrarAlerta('Aviso', 'Candidato grabado correctamente', 'success');\n        } catch (error) {\n          console.error(error);\n          this.mostrarAlerta('Error', 'No se pudo grabar el cliente.', 'error');\n        }\n      } else {\n        this.mostrarAlerta('Error', 'Por favor, completa todos los campos requeridos.', 'error');\n      }\n    },\n    async getDepartamentos() {\n      try {\n        const response = await fetch('http://localhost:3000/departamentos');\n        if (!response.ok) {\n          throw new Error('Error en la solicitud:' + response.statusText);\n        }\n        this.departamentos = await response.json();\n      } catch (error) {\n        console.error(error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["Swal","name","components","data","candidato","apellidos","nombre","email","movil","departamento","departamentos","categorias","mounted","getDepartamentos","methods","validarTelefono","telefono","mostrarAlerta","regex","test","validarEmail","titulo","mensaje","icono","fire","title","text","icon","customClass","container","popup","modal","grabarCandidato","response","fetch","ok","Error","statusText","crearResponse","method","headers","body","JSON","stringify","nuevoCandidato","json","candidatos","push","error","console"],"sources":["/home/a23johanfav/apontejohan/src/components/TablaEmpleo.vue"],"sourcesContent":["<template>\n  <div class=\"row\">\n    <h5 class=\"text-center front-weight-bold\">TRABAJA CON NOSOTROS</h5>\n  </div>\n  <br>\n  <div class=\"container-fluid border p-4\">\n    <form class=\"form-in-line\">\n      <div class=\"col-10 col-m-6 col-lg-6 mx-auto\">\n        <div class=\"input-group-text mb-3\">\n          <span class=\"input-group-text custom-span me-2\">Apellidos:</span>\n          <input type=\"text\" class=\"form-control sm w-50\" required placeholder=\"Apellidos\"\n            v-model=\"candidato.apellidos\">\n\n          <span class=\"input-group-text custom-span ms-2 me-2\">Nombre:</span>\n          <input type=\"text\" class=\"form-control sm w-50\" required placeholder=\"Nombre\" v-model=\"candidato.nombre\">\n        </div>\n        <div class=\"input-group-text mb-3\">\n          <span class=\"input-group-text custom-span ms-2 me-2\">Email: </span>\n          <input type=\"email\" class=\"form-control sm w-50\" required placeholder=\"Email\" v-model=\"candidato.email\"\n            @blur=\"validarEmail(this.candidato.email)\">\n\n          <span class=\"input-group-text custom-span ms-2 me-2\">Móvil:</span>\n          <input class=\"form-control sm w-25\" type=\"text\" required placeholder=\"Móvil\" v-model=\"candidato.movil\"\n            @blur=\"validarTelefono(this.candidato.movil)\">\n\n\n\n        </div>\n\n        <div class=\"input-group-text mb-3\">\n          <select name=\"departamento\" class=\"form-control sm w-25 ms-2\" v-model=\"candidato.departamento\">\n            <option value=\"\">Departamentos</option>\n            <option v-for=\"departamento in departamentos\" :key=\"departamento.id\" :value=\"departamento\">\n              {{ departamento.nm }}\n            </option>\n          </select>\n\n\n          <input type=\"radio\" name=\"modalidad\" id=\"remoto\"><input type=\"radio\" name=\"modalidad\" id=\"hibrido\"><input type=\"radio\" name=\"\" id=\"\">\n        </div>\n        <div class=\"input-group-text mb-3\">\n\n          <span class=\"input-group-text custom-span ms-2 me-2\">CV (PDF); </span>\n          <input type=\"file\" class=\"form-control sm w-100\">\n        </div>\n      </div>\n      <button class=\"btn btn-primary m-1\" @click.prevent=\"grabarCandidato\">Enviar</button>\n    </form>\n  </div>\n</template>\n\n<script>\nimport Swal from 'sweetalert2';\n\nexport default {\n  name: \"TablaEmpleo\",\n  components: {\n  },\n\n  data() {\n    return {\n      candidato: {\n        apellidos: '',\n        nombre: '',\n        email: '',\n        movil: '',\n        departamento: ''\n      },\n\n      departamentos: [],\n      categorias: []\n    }\n  },\n\n  mounted() {\n    this.getDepartamentos();\n  },\n\n  methods: {\n    validarTelefono(telefono) {\n      if (telefono == '') {\n        this.mostrarAlerta('Error', 'El teléfono con formato no valido', 'error');\n      }\n      const regex = /^[67]\\d{8}$/;\n      if (!regex.test(telefono)) {\n        this.mostrarAlerta('Error', 'El teléfono con formato no valido', 'error')\n      }\n    },\n\n    validarEmail(email) {\n      if (email == '') {\n        this.mostrarAlerta('Error', 'El email con formato no valido', 'error');\n      }\n      const regex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n      if (!regex.test(email)) {\n        this.mostrarAlerta('Error', 'El email con formato no valido', 'error')\n      }\n    },\n\n    mostrarAlerta(titulo, mensaje, icono) {\n      Swal.fire({\n        title: titulo,\n        text: mensaje,\n        icon: icono,\n        customClass: {\n          container: 'custom-alert-container',\n          popup: 'custom-alert-popup',\n          modal: 'custom-alert-modal'\n        }\n      })\n    },\n\n\n    async grabarCandidato() {\n      // Verificar si los campos requeridos están llenos\n      if (this.candidato.apellidos && this.candidato.nombre && this.candidato.email && this.candidato.movil && this.candidato.apellidos && this.candidato.nombre) {\n        try {\n          const response = await fetch('http://localhost:3000/candidatos');\n          if (!response.ok) {\n            throw new Error('Error al obtener los candidatos: ' + response.statusText);\n          }\n\n          const crearResponse = await fetch('http://localhost:3000/candidatos', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            },\n            body: JSON.stringify(this.candidato),\n          });\n\n          if (!crearResponse.ok) {\n            throw new Error('Error al guardar el candidato ' + crearResponse.statusText);\n          }\n\n          const nuevoCandidato = await crearResponse.json();\n          this.candidatos.push(nuevoCandidato);\n          this.mostrarAlerta('Aviso', 'Candidato grabado correctamente', 'success');\n        } catch (error) {\n          console.error(error);\n          this.mostrarAlerta('Error', 'No se pudo grabar el cliente.', 'error');\n        }\n      } else {\n        this.mostrarAlerta('Error', 'Por favor, completa todos los campos requeridos.', 'error');\n      }\n    },\n\n    async getDepartamentos() {\n      try {\n        const response = await fetch('http://localhost:3000/departamentos');\n        if (!response.ok) {\n          throw new Error('Error en la solicitud:' + response.statusText);\n        }\n        this.departamentos = await response.json();\n      } catch (error) {\n        console.error(error);\n      }\n    },\n  }\n}\n</script>\n\n<style></style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}